{"version":3,"file":"js/914.7e75771f.js","mappings":"iHAIAA,EAAQ,EAAU,CAACC,EAAKC,KACpB,MAAMC,EAASF,EAAIG,WAAaH,EAChC,IAAK,MAAOI,EAAKC,KAAQJ,EACrBC,EAAOE,GAAOC,EAElB,OAAOH,CAAM,C,qECRV,MAAMI,GAAiBC,EAAAA,EAAAA,IAAY,SAAU,CACjDC,MAAOA,KAAA,CACJC,cAAe,CACZ,wBAAyB,uCAG/BC,QAAS,CACNC,SAAAA,CAAUC,GACPC,KAAKD,OAASA,CACjB,I,4uCCDN,MAAME,GAAOC,EAAAA,EAAAA,KAAeD,KACtBE,GAAOC,EAAAA,EAAAA,KACPC,GAASC,EAAAA,EAAAA,MACTV,GAAgBH,EAAAA,EAAAA,KAAiBG,cAEjCW,GAAiBC,EAAAA,EAAAA,KAAI,GACrBC,GAAcD,EAAAA,EAAAA,IAAI,IAClBE,GAAeF,EAAAA,EAAAA,IAAI,IACnBG,GAAQH,EAAAA,EAAAA,IAAI,IACZI,GAAWJ,EAAAA,EAAAA,IAAI,IAEfK,EAAgBC,UACnB,MAAMC,EAAOC,EAAE3B,OACT4B,QAAiBC,MAAO,GAAEjB,cAAkB,CAC/CkB,OAAQ,OACRC,QAAS,CACN,eAAgB,oBAEnBC,KAAMC,KAAKC,UAAU,CAClBZ,MAAOI,EAAKJ,MAAMa,MAClBZ,SAAUG,EAAKH,SAASY,UAGxBC,QAAaR,EAASS,OACxBD,IACGA,EAAKE,SACNxB,EAAKyB,QAAQH,EAAKA,MAClBpB,EAAOwB,KAAK,MAERJ,EAAK1B,OACNU,EAAYe,MAAQC,EAAK1B,OAEzBW,EAAac,MAAQ5B,EAAc6B,EAAKK,UAAY,sBAG7D,E,m/DCtCH,MAAMC,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,O","sources":["webpack://tradetrove/./node_modules/vue-loader/dist/exportHelper.js","webpack://tradetrove/./src/stores/errorsStore.js","webpack://tradetrove/./src/views/LoginView.vue","webpack://tradetrove/./src/views/LoginView.vue?5755"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// runtime helper for setting properties on components\n// in a tree-shakable way\nexports.default = (sfc, props) => {\n    const target = sfc.__vccOpts || sfc;\n    for (const [key, val] of props) {\n        target[key] = val;\n    }\n    return target;\n};\n","import { defineStore } from \"pinia\";\r\nexport const useErrorsStore = defineStore(\"errors\", {\r\n   state: () => ({\r\n      errorMessages: {\r\n         'Authentication failed': 'Неверный пароль. Попробуйте снова',\r\n      },\r\n   }),\r\n   actions: {\r\n      setErrors(errors) {\r\n         this.errors = errors;\r\n      },\r\n   },\r\n})","<!-- TODO: сделать запомнить меня и восстановление пароля -->\n<script setup>\n\nimport { ref } from 'vue';\nimport { useHostStore } from '@/stores/hostStore';\nimport { useRouter } from 'vue-router';\nimport { useErrorsStore } from '@/stores/errorsStore';\nimport { useAuthStore } from '@/stores/authStore';\n\nconst host = useHostStore().host;\nconst auth = useAuthStore();\nconst router = useRouter();\nconst errorMessages = useErrorsStore().errorMessages;\n\nconst isPasswordShow = ref(false);\nconst fieldErrors = ref([]);\nconst messageError = ref('');\nconst email = ref('');\nconst password = ref('');\n\nconst sendLoginForm = async (e) => {\n   const form = e.target;\n   const response = await fetch(`${host}/api/login`, {\n      method: 'POST',\n      headers: {\n         'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n         email: form.email.value,\n         password: form.password.value,\n      }),\n   });\n   const data = await response.json();\n   if (data) {\n      if (data.success) {\n         auth.setUser(data.data);\n         router.push('/');\n      } else {\n         if (data.errors) {\n            fieldErrors.value = data.errors;\n         } else {\n            messageError.value = errorMessages[data.message] || 'Что-то пошло не так';\n         }\n      }\n   }\n};\n</script>\n<template>\n   <div class=\"center\">\n      <div class=\"login\">\n         <div class=\"container login__content\">\n            <h2 class=\"login__title title\">Вход</h2>\n            <form @submit.prevent=\"sendLoginForm\" class=\"login__form form\">\n               <div class=\"form__fields\">\n                  <div :class=\"{ invalid: fieldErrors.email }\" class=\"form__field form-field\">\n                     <div class=\"form-field__label\">Email</div>\n                     <input v-model=\"email\" name=\"email\" type=\"email\" class=\"form-field__input\" />\n                     <div v-if=\"fieldErrors.email\" class=\"form-field__errors\">\n                        <div v-for=\"error in fieldErrors.email\" class=\"form-field__error\">{{ error }}</div>\n                     </div>\n                  </div>\n                  <div :class=\"{ invalid: fieldErrors.password }\" class=\"form__field form-field\">\n                     <div class=\"form-field__label\">Пароль</div>\n                     <div class=\"form-field__input-wrapper form-field__input-wrapper--password\" :class=\"{ 'show-password': isPasswordShow }\">\n                        <input v-model=\"password\" name=\"password\" :type=\"isPasswordShow ? 'text' : 'password'\" class=\"form-field__input\" />\n                        <button @click=\"isPasswordShow = !isPasswordShow\" type=\"button\" class=\"form-field__toggle-pas form-field__toggle-pas--show\"><font-awesome-icon icon=\"eye\" /></button>\n                        <button @click=\"isPasswordShow = !isPasswordShow\" type=\"button\" class=\"form-field__toggle-pas form-field__toggle-pas--hide\"><font-awesome-icon icon=\"eye-slash\" /></button>\n                     </div>\n                     <div v-if=\"fieldErrors.password\" class=\"form-field__errors\">\n                        <div v-for=\"error in fieldErrors.password\" class=\"form-field__error\">{{ error }}</div>\n                     </div>\n                  </div>\n               </div>\n\n               <div class=\"form__actions\">\n                  <div class=\"form-field form-field--checkbox\">\n                     <input name=\"remember\" id=\"remember\" type=\"checkbox\" class=\"form-field__input\" />\n                     <label for=\"remember\" class=\"form-field__label\">Запомнить меня</label>\n                  </div>\n                  <router-link to=\"/restore\" class=\"link\">Восстановить пароль</router-link>\n               </div>\n               <div class=\"form__btn-wrapper\">\n                  <button :disabled=\"!email || !password ? true : false\" type=\"submit\" class=\"form__btn btn\">Войти</button>\n               </div>\n               <div class=\"form__error\">{{ messageError }}</div>\n            </form>\n            <div class=\"login__register-wrapper\">\n               <router-link class=\"login__register link\" to=\"/register\">Зарегистрироваться</router-link>\n            </div>\n            <div class=\"login__agreement\"><p>При регистрации и входе вы соглашаетесь с условиями использования TradeTrove и политикой конфиденциальности.</p></div>\n         </div>\n      </div>\n   </div>\n</template>\n\n<style scoped lang=\"scss\">\n.container {\n}\n.login {\n   max-width: 530px;\n   width: 100%;\n   margin: 0 auto;\n   // .login__content\n   &__content {\n      // display: flex;\n      // flex-direction: column;\n   }\n   // .login__title\n   &__title {\n      margin-bottom: 20px;\n      text-align: center;\n   }\n   // .login__form\n   &__form {\n   }\n\n   // .login__register-wrapper\n   &__register-wrapper {\n      margin-top: 10px;\n      display: flex;\n      justify-content: center;\n      text-align: center;\n   }\n   // .login__register\n   &__register {\n   }\n   // .login__agreement\n   &__agreement {\n      margin-top: 25px;\n      text-align: center;\n      font-size: 14px;\n   }\n}\n</style>\n","import script from \"./LoginView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./LoginView.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./LoginView.vue?vue&type=style&index=0&id=27687f5e&scoped=true&lang=scss\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-27687f5e\"]])\n\nexport default __exports__"],"names":["exports","sfc","props","target","__vccOpts","key","val","useErrorsStore","defineStore","state","errorMessages","actions","setErrors","errors","this","host","useHostStore","auth","useAuthStore","router","useRouter","isPasswordShow","ref","fieldErrors","messageError","email","password","sendLoginForm","async","form","e","response","fetch","method","headers","body","JSON","stringify","value","data","json","success","setUser","push","message","__exports__"],"sourceRoot":""}