{"version":3,"file":"js/275.562585e0.js","mappings":"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","sources":["webpack://tradetrove/./node_modules/vue-loader/dist/exportHelper.js","webpack://tradetrove/./src/stores/errorsStore.js","webpack://tradetrove/./src/views/RegisterView.vue","webpack://tradetrove/./src/views/RegisterView.vue?1ec6"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// runtime helper for setting properties on components\n// in a tree-shakable way\nexports.default = (sfc, props) => {\n    const target = sfc.__vccOpts || sfc;\n    for (const [key, val] of props) {\n        target[key] = val;\n    }\n    return target;\n};\n","import { defineStore } from \"pinia\";\r\nexport const useErrorsStore = defineStore(\"errors\", {\r\n   state: () => ({\r\n      errorMessages: {\r\n         'Authentication failed': 'Неверный пароль. Попробуйте снова',\r\n      },\r\n   }),\r\n   actions: {\r\n      setErrors(errors) {\r\n         this.errors = errors;\r\n      },\r\n   },\r\n})","<!-- TODO: сделать проверку занятости почты при вводе ее (через 2 сек после остановки печати отправить запрос к API, и сделать API) -->\n<script setup>\nimport { computed, ref, watch } from 'vue';\nimport { useHostStore } from '@/stores/hostStore';\nimport { useRouter } from 'vue-router';\nimport { useErrorsStore } from '@/stores/errorsStore';\nimport { useAuthStore } from '@/stores/authStore';\n\nconst host = useHostStore().host;\nconst router = useRouter();\nconst errorMessages = useErrorsStore().errorMessages;\nconst auth = useAuthStore();\n\nconst fieldErrors = ref([]);\nconst messageError = ref('');\nconst email = ref('');\nconst first_name = ref('');\nconst last_name = ref('');\nconst password = ref('');\nconst isPasswordShow = ref(false);\nconst passwordSubmit = ref('');\nconst isPasswordSubmitShow = ref(false);\nconst isPasswordSubmitFocused = ref(false);\nconst isPasswordFocused = ref(false);\nconst isEmailFocused = ref(false);\nconst passwordValidateErrors = ref({\n   minlength: { text: 'Минимальная длина пароля 8 символов', value: true },\n   lowerCaseLetter: { text: 'Пароль должен содержать хотя бы одну строчную букву', value: true },\n   upperCaseLetter: { text: 'Пароль должен содержать хотя бы одну заглавную букву', value: true },\n   number: { text: 'Пароль должен содержать хотя бы одну цифру', value: true },\n});\nconst isPasswordValidateError = ref(true);\n// const passwordValidateErrors = ref({\n//    'minlength': false,\n//    'lowerCaseLetter': false,\n//    'upperCaseLetter': false,\n//    'number': false,\n// });\n\nconst isDisabledButton = computed(() => {\n   if (\n      email.value &&\n      first_name.value &&\n      last_name.value &&\n      password.value &&\n      passwordSubmit.value &&\n      isPasswordSubmited.value &&\n      !isPasswordValidateError.value\n   ) {\n      return false;\n   } else {\n      return true;\n   }\n});\nconst isPasswordSubmited = computed(() => {\n   if (password.value === passwordSubmit.value) {\n      return true;\n   } else {\n      return false;\n   }\n});\nwatch([password, passwordSubmit, isPasswordSubmitFocused, isPasswordFocused], () => {\n   if (!isPasswordSubmitFocused.value && !isPasswordFocused.value) {\n      if (passwordSubmit.value && passwordSubmit.value != password.value) {\n         fieldErrors.value.passwordSubmit = ['Пароли должны совпадать'];\n      } else {\n         fieldErrors.value.passwordSubmit = null;\n      }\n   }\n});\nwatch([password, passwordSubmit], () => {\n   if (password.value && passwordSubmit.value && password.value != passwordSubmit.value) {\n   } else {\n      fieldErrors.value.passwordSubmit = null;\n   }\n});\n\nwatch(password, () => {\n   if (password.value.length < 8) {\n      passwordValidateErrors.value.minlength.value = true;\n      isPasswordValidateError.value = true;\n   } else {\n      passwordValidateErrors.value.minlength.value = false;\n      isPasswordValidateError.value = false;\n   }\n   if (!/[a-z]/.test(password.value)) {\n      passwordValidateErrors.value.lowerCaseLetter.value = true;\n      isPasswordValidateError.value = true;\n   } else {\n      passwordValidateErrors.value.lowerCaseLetter.value = false;\n      isPasswordValidateError.value = false;\n   }\n   if (!/[A-Z]/.test(password.value)) {\n      passwordValidateErrors.value.upperCaseLetter.value = true;\n      isPasswordValidateError.value = true;\n   } else {\n      passwordValidateErrors.value.upperCaseLetter.value = false;\n      isPasswordValidateError.value = false;\n   }\n   if (!/[0-9]/.test(password.value)) {\n      passwordValidateErrors.value.number.value = true;\n      isPasswordValidateError.value = true;\n   } else {\n      passwordValidateErrors.value.number.value = false;\n      isPasswordValidateError.value = false;\n   }\n});\nlet emailTimeout = null;\nwatch(isEmailFocused, async (focused) => {\n   if (!focused) {\n      if (email.value) {\n         emailTimeout = setTimeout(async () => {\n            const response = await fetch(`${host}/api/check-email`, {\n               method: 'POST',\n               body: JSON.stringify({ email: email.value }),\n               headers: {\n                  'Content-Type': 'application/json',\n               },\n            });\n            const data = await response?.json();\n            console.log(data);\n            if (data?.success) {\n               fieldErrors.value.email = null;\n            } else {\n               fieldErrors.value.email = ['Такой email уже зарегистрирован'];\n            }\n         }, 1000);\n      }\n   } else {\n      clearTimeout(emailTimeout);\n   }\n});\nconst sendRegisterForm = async (e) => {\n   const form = e.target;\n   const response = await fetch(`${host}/api/register`, {\n      method: 'POST',\n      headers: {\n         'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n         email: form.email.value,\n         password: form.password.value,\n         first_name: form.first_name.value,\n         last_name: form.last_name.value,\n      }),\n   });\n   const data = await response.json();\n   if (data) {\n      if (data.success) {\n         router.push('/login');\n      } else {\n         if (data.errors) {\n            fieldErrors.value = data.errors;\n         } else {\n            messageError.value = errorMessages[data.message] || 'Что-то пошло не так';\n         }\n      }\n   }\n};\n</script>\n<template>\n   <div class=\"center\">\n      <div class=\"login\">\n         <div class=\"container login__content\">\n            <h2 class=\"login__title title\">Регистрация</h2>\n            <form @submit.prevent=\"sendRegisterForm\" class=\"login__form form\">\n               <div class=\"form__fields\">\n                  <div :class=\"{ invalid: fieldErrors.email }\" class=\"form__field form-field\">\n                     <div class=\"form-field__label\">Email</div>\n                     <input\n                        @blur=\"isEmailFocused = false\"\n                        @focus=\"isEmailFocused = true\"\n                        v-model=\"email\"\n                        name=\"email\"\n                        type=\"email\"\n                        class=\"form-field__input\"\n                     />\n                     <div v-if=\"fieldErrors.email\" class=\"form-field__errors\">\n                        <div v-for=\"error in fieldErrors.email\" class=\"form-field__error\">\n                           {{ error }}\n                        </div>\n                     </div>\n                  </div>\n                  <div :class=\"{ invalid: fieldErrors.first_name }\" class=\"form__field form-field\">\n                     <div class=\"form-field__label\">Имя</div>\n                     <input\n                        v-model=\"first_name\"\n                        name=\"first_name\"\n                        type=\"text\"\n                        class=\"form-field__input\"\n                     />\n                     <div v-if=\"fieldErrors.first_name\" class=\"form-field__errors\">\n                        <div v-for=\"error in fieldErrors.first_name\" class=\"form-field__error\">\n                           {{ error }}\n                        </div>\n                     </div>\n                  </div>\n                  <div :class=\"{ invalid: fieldErrors.last_name }\" class=\"form__field form-field\">\n                     <div class=\"form-field__label\">Фамилия</div>\n                     <input\n                        v-model=\"last_name\"\n                        name=\"last_name\"\n                        type=\"text\"\n                        class=\"form-field__input\"\n                     />\n                     <div v-if=\"fieldErrors.last_name\" class=\"form-field__errors\">\n                        <div v-for=\"error in fieldErrors.last_name\" class=\"form-field__error\">\n                           {{ error }}\n                        </div>\n                     </div>\n                  </div>\n                  <div :class=\"{ invalid: fieldErrors.password }\" class=\"form__field form-field\">\n                     <div class=\"form-field__label\">Пароль</div>\n                     <div\n                        :class=\"{ 'show-password': isPasswordShow }\"\n                        class=\"form-field__input-wrapper form-field__input-wrapper--password\"\n                     >\n                        <input\n                           @blur=\"isPasswordFocused = false\"\n                           @focus=\"isPasswordFocused = true\"\n                           v-model=\"password\"\n                           name=\"password\"\n                           :type=\"isPasswordShow ? 'text' : 'password'\"\n                           class=\"form-field__input\"\n                        />\n                        <button\n                           @click=\"isPasswordShow = !isPasswordShow\"\n                           type=\"button\"\n                           class=\"form-field__toggle-pas form-field__toggle-pas--show\"\n                        >\n                           <font-awesome-icon icon=\"eye\" />\n                        </button>\n                        <button\n                           @click=\"isPasswordShow = !isPasswordShow\"\n                           type=\"button\"\n                           class=\"form-field__toggle-pas form-field__toggle-pas--hide\"\n                        >\n                           <font-awesome-icon icon=\"eye-slash\" />\n                        </button>\n                     </div>\n                     <div v-if=\"fieldErrors.password\" class=\"form-field__errors\">\n                        <div v-for=\"error in fieldErrors.password\" class=\"form-field__error\">\n                           {{ error }}\n                        </div>\n                     </div>\n                     <div class=\"form-field__validations\">\n                        <div\n                           v-for=\"error in passwordValidateErrors\"\n                           :class=\"{ invalid: error.value }\"\n                           class=\"form-field__validation\"\n                        >\n                           <div\n                              v-if=\"error.value\"\n                              class=\"form-field__validation-icon form-field__validation-icon--error\"\n                           >\n                              <font-awesome-icon icon=\"times\" />\n                           </div>\n                           <div\n                              v-else\n                              class=\"form-field__validation-icon form-field__validation-icon--success\"\n                           >\n                              <font-awesome-icon icon=\"check\" />\n                           </div>\n                           <div class=\"form-field__validation-text\">{{ error.text }}</div>\n                        </div>\n                     </div>\n                  </div>\n\n                  <div\n                     :class=\"{ invalid: fieldErrors.passwordSubmit }\"\n                     class=\"form__field form-field\"\n                  >\n                     <div class=\"form-field__label\">Повторите пароль</div>\n                     <div\n                        class=\"form-field__input-wrapper form-field__input-wrapper--password\"\n                        :class=\"{ 'show-password': isPasswordSubmitShow }\"\n                     >\n                        <input\n                           @blur=\"isPasswordSubmitFocused = false\"\n                           @focus=\"isPasswordSubmitFocused = true\"\n                           v-model=\"passwordSubmit\"\n                           name=\"passwordSubmit\"\n                           :type=\"isPasswordSubmitShow ? 'text' : 'password'\"\n                           class=\"form-field__input\"\n                        />\n                        <button\n                           @click=\"isPasswordSubmitShow = !isPasswordSubmitShow\"\n                           type=\"button\"\n                           class=\"form-field__toggle-pas form-field__toggle-pas--show\"\n                        >\n                           <font-awesome-icon icon=\"eye\" />\n                        </button>\n                        <button\n                           @click=\"isPasswordSubmitShow = !isPasswordSubmitShow\"\n                           type=\"button\"\n                           class=\"form-field__toggle-pas form-field__toggle-pas--hide\"\n                        >\n                           <font-awesome-icon icon=\"eye-slash\" />\n                        </button>\n                     </div>\n                     <div v-if=\"fieldErrors.passwordSubmit\" class=\"form-field__errors\">\n                        <div v-for=\"error in fieldErrors.passwordSubmit\" class=\"form-field__error\">\n                           {{ error }}\n                        </div>\n                     </div>\n                  </div>\n               </div>\n\n               <!-- <div class=\"form__actions\">\n                  <div class=\"form-field form-field--checkbox\">\n                     <input name=\"remember\" id=\"remember\" type=\"checkbox\" class=\"form-field__input\" />\n                     <label for=\"remember\" class=\"form-field__label\">Запомнить меня</label>\n                  </div>\n                  <router-link to=\"/restore\" class=\"link\">Восстановить пароль</router-link>\n               </div> -->\n               <div class=\"form__btn-wrapper\">\n                  <button\n                     :disabled=\"isDisabledButton ? true : false\"\n                     type=\"submit\"\n                     class=\"form__btn btn\"\n                  >\n                     Зарегистрироваться\n                  </button>\n               </div>\n               <div class=\"form__error\">{{ messageError }}</div>\n            </form>\n            <div class=\"login__register-wrapper\">\n               <router-link class=\"login__register link\" to=\"/login\">Войти</router-link>\n            </div>\n            <div class=\"login__agreement\">\n               <p>\n                  При регистрации и входе вы соглашаетесь с условиями использования TradeTrove и\n                  политикой конфиденциальности.\n               </p>\n            </div>\n         </div>\n      </div>\n   </div>\n</template>\n\n<style scoped lang=\"scss\">\n.container {\n}\n.login {\n   max-width: 530px;\n   width: 100%;\n   margin: 0 auto;\n   // .login__content\n   &__content {\n      // display: flex;\n      // flex-direction: column;\n   }\n   // .login__title\n   &__title {\n      margin-bottom: 20px;\n      text-align: center;\n   }\n   // .login__form\n   &__form {\n   }\n\n   // .login__register-wrapper\n   &__register-wrapper {\n      margin-top: 10px;\n      display: flex;\n      justify-content: center;\n      text-align: center;\n   }\n   // .login__register\n   &__register {\n   }\n   // .login__agreement\n   &__agreement {\n      margin-top: 25px;\n      text-align: center;\n      font-size: 14px;\n   }\n}\n</style>\n","import script from \"./RegisterView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./RegisterView.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./RegisterView.vue?vue&type=style&index=0&id=e558107c&scoped=true&lang=scss\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-e558107c\"]])\n\nexport default __exports__"],"names":["exports","sfc","props","target","__vccOpts","key","val","useErrorsStore","defineStore","state","errorMessages","actions","setErrors","errors","this","host","useHostStore","router","useRouter","fieldErrors","useAuthStore","ref","messageError","email","first_name","last_name","password","isPasswordShow","passwordSubmit","isPasswordSubmitShow","isPasswordSubmitFocused","isPasswordFocused","isEmailFocused","passwordValidateErrors","minlength","text","value","lowerCaseLetter","upperCaseLetter","number","isPasswordValidateError","isDisabledButton","computed","isPasswordSubmited","watch","length","test","emailTimeout","async","focused","clearTimeout","setTimeout","response","fetch","method","body","JSON","stringify","headers","data","json","console","log","success","sendRegisterForm","form","e","push","message","__exports__"],"sourceRoot":""}