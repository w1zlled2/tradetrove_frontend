{"version":3,"file":"js/935.15bd337d.js","mappings":"iHAIAA,EAAQ,EAAU,CAACC,EAAKC,KACpB,MAAMC,EAASF,EAAIG,WAAaH,EAChC,IAAK,MAAOI,EAAKC,KAAQJ,EACrBC,EAAOE,GAAOC,EAElB,OAAOH,CAAM,C,qECRV,MAAMI,GAAiBC,EAAAA,EAAAA,IAAY,SAAU,CACjDC,MAAOA,KAAA,CACJC,cAAe,CACZ,wBAAyB,uCAG/BC,QAAS,CACNC,SAAAA,CAAUC,GACPC,KAAKD,OAASA,CACjB,I,44CCFN,MAAME,GAAOC,EAAAA,EAAAA,KAAeD,KACtBE,GAASC,EAAAA,EAAAA,MACTR,GAAgBH,EAAAA,EAAAA,KAAiBG,cAGjCS,IAFOC,EAAAA,EAAAA,MAEOC,EAAAA,EAAAA,IAAI,KAClBC,GAAeD,EAAAA,EAAAA,IAAI,IACnBE,GAAQF,EAAAA,EAAAA,IAAI,IACZG,GAAaH,EAAAA,EAAAA,IAAI,IACjBI,GAAYJ,EAAAA,EAAAA,IAAI,IAChBK,GAAWL,EAAAA,EAAAA,IAAI,IACfM,GAAiBN,EAAAA,EAAAA,KAAI,GACrBO,GAAiBP,EAAAA,EAAAA,IAAI,IACrBQ,GAAuBR,EAAAA,EAAAA,KAAI,GAE3BS,GAAmBC,EAAAA,EAAAA,KAAS,MAC3BR,EAAMS,OAASR,EAAWQ,OAASP,EAAUO,OAASN,EAASM,OAASJ,EAAeI,OAASC,EAAmBD,SAMpHC,GAAqBF,EAAAA,EAAAA,KAAS,IAC7BL,EAASM,QAAUJ,EAAeI,SAMzCE,EAAAA,EAAAA,IAAMN,GAAgB,KACfA,EAAeI,OAASJ,EAAeI,OAASN,EAASM,MAC1Db,EAAYa,MAAMJ,eAAiB,CAAC,2BAEpCT,EAAYa,MAAMJ,eAAiB,IACtC,IAGH,MAAMO,EAAmBC,UACtB,MAAMC,EAAOC,EAAEnC,OACToC,QAAiBC,MAAO,GAAEzB,iBAAqB,CAClD0B,OAAQ,OACRC,QAAS,CACN,eAAgB,oBAEnBC,KAAMC,KAAKC,UAAU,CAClBtB,MAAOc,EAAKd,MAAMS,MAClBN,SAAUW,EAAKX,SAASM,MACxBR,WAAYa,EAAKb,WAAWQ,MAC5BP,UAAWY,EAAKZ,UAAUO,UAG1Bc,QAAaP,EAASQ,OACxBD,IACGA,EAAKE,QACN/B,EAAOgC,KAAK,UAERH,EAAKjC,OACNM,EAAYa,MAAQc,EAAKjC,OAEzBS,EAAaU,MAAQtB,EAAcoC,EAAKI,UAAY,sBAG7D,E,moHChEH,MAAMC,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,O","sources":["webpack://tradetrove/./node_modules/vue-loader/dist/exportHelper.js","webpack://tradetrove/./src/stores/errorsStore.js","webpack://tradetrove/./src/views/RegisterView.vue","webpack://tradetrove/./src/views/RegisterView.vue?1ec6"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// runtime helper for setting properties on components\n// in a tree-shakable way\nexports.default = (sfc, props) => {\n    const target = sfc.__vccOpts || sfc;\n    for (const [key, val] of props) {\n        target[key] = val;\n    }\n    return target;\n};\n","import { defineStore } from \"pinia\";\r\nexport const useErrorsStore = defineStore(\"errors\", {\r\n   state: () => ({\r\n      errorMessages: {\r\n         'Authentication failed': 'Неверный пароль. Попробуйте снова',\r\n      },\r\n   }),\r\n   actions: {\r\n      setErrors(errors) {\r\n         this.errors = errors;\r\n      },\r\n   },\r\n})","<!-- TODO: сделать проверку занятости почты при вводе ее (через 2 сек после остановки отправить запрос к API, и сделать API) -->\n<script setup>\nimport { computed, ref, watch } from 'vue';\nimport { useHostStore } from '@/stores/hostStore';\nimport { useRouter } from 'vue-router';\nimport { useErrorsStore } from '@/stores/errorsStore';\nimport { useAuthStore } from '@/stores/authStore';\n\nconst host = useHostStore().host;\nconst router = useRouter();\nconst errorMessages = useErrorsStore().errorMessages;\nconst auth = useAuthStore();\n\nconst fieldErrors = ref([]);\nconst messageError = ref('');\nconst email = ref('');\nconst first_name = ref('');\nconst last_name = ref('');\nconst password = ref('');\nconst isPasswordShow = ref(false);\nconst passwordSubmit = ref('');\nconst isPasswordSubmitShow = ref(false);\n\nconst isDisabledButton = computed(() => {\n   if (email.value && first_name.value && last_name.value && password.value && passwordSubmit.value && isPasswordSubmited.value) {\n      return false;\n   } else {\n      return true;\n   }\n});\nconst isPasswordSubmited = computed(() => {\n   if (password.value === passwordSubmit.value) {\n      return true;\n   } else {\n      return false;\n   }\n});\nwatch(passwordSubmit, () => {\n   if (passwordSubmit.value && passwordSubmit.value != password.value) {\n      fieldErrors.value.passwordSubmit = ['Пароли должны совпадать'];\n   } else {\n      fieldErrors.value.passwordSubmit = null;\n   }\n});\n\nconst sendRegisterForm = async (e) => {\n   const form = e.target;\n   const response = await fetch(`${host}/api/register`, {\n      method: 'POST',\n      headers: {\n         'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n         email: form.email.value,\n         password: form.password.value,\n         first_name: form.first_name.value,\n         last_name: form.last_name.value,\n      }),\n   });\n   const data = await response.json();\n   if (data) {\n      if (data.success) {\n         router.push('/login');\n      } else {\n         if (data.errors) {\n            fieldErrors.value = data.errors;\n         } else {\n            messageError.value = errorMessages[data.message] || 'Что-то пошло не так';\n         }\n      }\n   }\n};\n</script>\n<template>\n   <div class=\"center\">\n      <div class=\"login\">\n         <div class=\"container login__content\">\n            <h2 class=\"login__title title\">Регистрация</h2>\n            <form @submit.prevent=\"sendRegisterForm\" class=\"login__form form\">\n               <div class=\"form__fields\">\n                  <div :class=\"{ invalid: fieldErrors.email }\" class=\"form__field form-field\">\n                     <div class=\"form-field__label\">Email</div>\n                     <input v-model=\"email\" name=\"email\" type=\"email\" class=\"form-field__input\" />\n                     <div v-if=\"fieldErrors.email\" class=\"form-field__errors\">\n                        <div v-for=\"error in fieldErrors.email\" class=\"form-field__error\">{{ error }}</div>\n                     </div>\n                  </div>\n                  <div :class=\"{ invalid: fieldErrors.first_name }\" class=\"form__field form-field\">\n                     <div class=\"form-field__label\">Имя</div>\n                     <input v-model=\"first_name\" name=\"first_name\" type=\"text\" class=\"form-field__input\" />\n                     <div v-if=\"fieldErrors.first_name\" class=\"form-field__errors\">\n                        <div v-for=\"error in fieldErrors.first_name\" class=\"form-field__error\">{{ error }}</div>\n                     </div>\n                  </div>\n                  <div :class=\"{ invalid: fieldErrors.last_name }\" class=\"form__field form-field\">\n                     <div class=\"form-field__label\">Фамилия</div>\n                     <input v-model=\"last_name\" name=\"last_name\" type=\"text\" class=\"form-field__input\" />\n                     <div v-if=\"fieldErrors.last_name\" class=\"form-field__errors\">\n                        <div v-for=\"error in fieldErrors.last_name\" class=\"form-field__error\">{{ error }}</div>\n                     </div>\n                  </div>\n                  <div :class=\"{ invalid: fieldErrors.password }\" class=\"form__field form-field\">\n                     <div class=\"form-field__label\">Пароль</div>\n                     <div :class=\"{ 'show-password': isPasswordShow }\" class=\"form-field__input-wrapper form-field__input-wrapper--password\">\n                        <input v-model=\"password\" name=\"password\" :type=\"isPasswordShow ? 'text' : 'password'\" class=\"form-field__input\" />\n                        <button @click=\"isPasswordShow = !isPasswordShow\" type=\"button\" class=\"form-field__toggle-pas form-field__toggle-pas--show\"><font-awesome-icon icon=\"eye\" /></button>\n                        <button @click=\"isPasswordShow = !isPasswordShow\" type=\"button\" class=\"form-field__toggle-pas form-field__toggle-pas--hide\"><font-awesome-icon icon=\"eye-slash\" /></button>\n                     </div>\n                     <div v-if=\"fieldErrors.password\" class=\"form-field__errors\">\n                        <div v-for=\"error in fieldErrors.password\" class=\"form-field__error\">{{ error }}</div>\n                     </div>\n                  </div>\n\n                  <div :class=\"{ invalid: fieldErrors.passwordSubmit }\" class=\"form__field form-field\">\n                     <div class=\"form-field__label\">Повторите пароль</div>\n                     <div class=\"form-field__input-wrapper form-field__input-wrapper--password\" :class=\"{ 'show-password': isPasswordSubmitShow }\">\n                        <input v-model=\"passwordSubmit\" name=\"passwordSubmit\" :type=\"isPasswordSubmitShow ? 'text' : 'password'\" class=\"form-field__input\" />\n                        <button @click=\"isPasswordSubmitShow = !isPasswordSubmitShow\" type=\"button\" class=\"form-field__toggle-pas form-field__toggle-pas--show\"><font-awesome-icon icon=\"eye\" /></button>\n                        <button @click=\"isPasswordSubmitShow = !isPasswordSubmitShow\" type=\"button\" class=\"form-field__toggle-pas form-field__toggle-pas--hide\"><font-awesome-icon icon=\"eye-slash\" /></button>\n                     </div>\n                     <div v-if=\"fieldErrors.passwordSubmit\" class=\"form-field__errors\">\n                        <div v-for=\"error in fieldErrors.passwordSubmit\" class=\"form-field__error\">{{ error }}</div>\n                     </div>\n                  </div>\n               </div>\n\n               <!-- <div class=\"form__actions\">\n                  <div class=\"form-field form-field--checkbox\">\n                     <input name=\"remember\" id=\"remember\" type=\"checkbox\" class=\"form-field__input\" />\n                     <label for=\"remember\" class=\"form-field__label\">Запомнить меня</label>\n                  </div>\n                  <router-link to=\"/restore\" class=\"link\">Восстановить пароль</router-link>\n               </div> -->\n               <div class=\"form__btn-wrapper\">\n                  <button :disabled=\"isDisabledButton ? true : false\" type=\"submit\" class=\"form__btn btn\">Зарегистрироваться</button>\n               </div>\n               <div class=\"form__error\">{{ messageError }}</div>\n            </form>\n            <div class=\"login__register-wrapper\">\n               <router-link class=\"login__register link\" to=\"/login\">Войти</router-link>\n            </div>\n            <div class=\"login__agreement\"><p>При регистрации и входе вы соглашаетесь с условиями использования TradeTrove и политикой конфиденциальности.</p></div>\n         </div>\n      </div>\n   </div>\n</template>\n\n<style scoped lang=\"scss\">\n.container {\n}\n.login {\n   max-width: 530px;\n   width: 100%;\n   margin: 0 auto;\n   // .login__content\n   &__content {\n      // display: flex;\n      // flex-direction: column;\n   }\n   // .login__title\n   &__title {\n      margin-bottom: 20px;\n      text-align: center;\n   }\n   // .login__form\n   &__form {\n   }\n\n   // .login__register-wrapper\n   &__register-wrapper {\n      margin-top: 10px;\n      display: flex;\n      justify-content: center;\n      text-align: center;\n   }\n   // .login__register\n   &__register {\n   }\n   // .login__agreement\n   &__agreement {\n      margin-top: 25px;\n      text-align: center;\n      font-size: 14px;\n   }\n}\n</style>\n","import script from \"./RegisterView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./RegisterView.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./RegisterView.vue?vue&type=style&index=0&id=933b73f4&scoped=true&lang=scss\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-933b73f4\"]])\n\nexport default __exports__"],"names":["exports","sfc","props","target","__vccOpts","key","val","useErrorsStore","defineStore","state","errorMessages","actions","setErrors","errors","this","host","useHostStore","router","useRouter","fieldErrors","useAuthStore","ref","messageError","email","first_name","last_name","password","isPasswordShow","passwordSubmit","isPasswordSubmitShow","isDisabledButton","computed","value","isPasswordSubmited","watch","sendRegisterForm","async","form","e","response","fetch","method","headers","body","JSON","stringify","data","json","success","push","message","__exports__"],"sourceRoot":""}